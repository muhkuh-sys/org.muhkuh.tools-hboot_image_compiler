
targets\netx90_app_blinki_iflash_2part\netx90_app_blinki_iflash_2part.elf:     file format elf32-littlearm
targets\netx90_app_blinki_iflash_2part\netx90_app_blinki_iflash_2part.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00001041

Program Header:
    LOAD off    0x00008000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00000204 memsz 0x00000204 flags r--
    LOAD off    0x00009040 vaddr 0x00001040 paddr 0x00001040 align 2**15
         filesz 0x000001dc memsz 0x000001dc flags r-x
    LOAD off    0x00010000 vaddr 0x000b0000 paddr 0x000b0000 align 2**15
         filesz 0x00000000 memsz 0x00008000 flags rw-
private flags = 5000202: [Version5 EABI] [soft-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .header       00000204  00000000  00000000  00008000  2**2  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .code         000001dc  00001040  00001040  00009040  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stack        00008000  000b0000  000b0000  00010000  2**0  ALLOC
  3 .comment      00000070  00000000  00000000  0000921c  2**0  CONTENTS, READONLY
  4 .ARM.attributes 0000002c  00000000  00000000  0000928c  2**0  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  000092b8  2**3  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00028d8d  00000000  00000000  00009388  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000715  00000000  00000000  00032115  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000073e  00000000  00000000  0003282a  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000144  00000000  00000000  00032f68  2**2  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00212dcf  00000000  00000000  000330ac  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000045c  00000000  00000000  00245e7b  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0004d91c  00000000  00000000  002462d7  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .header	00000000 .header
00001040 l    d  .code	00000000 .code
000b0000 l    d  .stack	00000000 .stack
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    df *ABS*	00000000 cm4_app_vector_table_iflash.c
00000000 l    df *ABS*	00000000 app_hboot_header_iflash.c
00000000 l    df *ABS*	00000000 targets\netx90_app_blinki_iflash_2part\init.o
0000104c l       .code	00000000 clear_bss
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 mmio6.c
00001214 l     O .code	00000002 atLEDState
00000000 l    df *ABS*	00000000 mmio7.c
00001218 l     O .code	00000002 atLEDState
00000000 l    df *ABS*	00000000 systime.c
00000000 l    df *ABS*	00000000 
000011fc g     F .code	00000018 systime_handle_is_elapsed
0000113c g     F .code	00000014 mmio7_init
00001064 g     F .code	0000004c blinki_main
000010d8 g     F .code	00000050 mmio6_blinki
000b0000 g       .code	00000000 __bss_start__
00000000 g     O .header	000001c0 cm4_app_vector_table_iflash
000010b0 g     F .code	00000014 mmio6_setLED
00001128 g     F .code	00000014 mmio7_setLED
000b8000 g       .stack	00000000 __STACK_TOP_APP_CPU__
000b0000 g       .code	00000000 __bss_end__
000001c0 g     O .header	00000040 app_cpu_hboot_header
00001150 g     F .code	00000050 mmio7_blinki
000011a0 g     F .code	00000018 systime_init
000b8000 g       .stack	00000000 stack_top
000010c4 g     F .code	00000014 mmio6_init
000011c4 g     F .code	00000014 systime_elapsed
000011b8 g     F .code	0000000c systime_get_ms
000011d8 g     F .code	00000014 systime_delay_ms
000011ec g     F .code	00000010 systime_handle_start_ms
00001040 g     F .code	00000000 start



Disassembly of section .code:

00001040 <start>:
    .func start, start
    .type start, STT_FUNC
start:
    @ b start
	@ Set own stack position.
	ldr     r2, =stack_top
    1040:	4a05      	ldr	r2, [pc, #20]	; (1058 <clear_bss+0xc>)
	mov     sp, r2
    1042:	4695      	mov	sp, r2
	strlo   r5, [r3], #4
	blo     copy_data
#endif

	@ Clear the .bss section (zero init).
	mov     r2, #0
    1044:	f04f 0200 	mov.w	r2, #0
	ldr     r3, =__bss_start__
    1048:	4b04      	ldr	r3, [pc, #16]	; (105c <clear_bss+0x10>)
	ldr     r4, =__bss_end__
    104a:	4c05      	ldr	r4, [pc, #20]	; (1060 <clear_bss+0x14>)

0000104c <clear_bss>:
clear_bss:
	str     r2, [r3], #4
    104c:	f843 2b04 	str.w	r2, [r3], #4
	cmp     r3, r4
    1050:	42a3      	cmp	r3, r4
	bmi     clear_bss
    1052:	d4fb      	bmi.n	104c <clear_bss>

	b       blinki_main
    1054:	f000 b806 	b.w	1064 <blinki_main>
    .func start, start
    .type start, STT_FUNC
start:
    @ b start
	@ Set own stack position.
	ldr     r2, =stack_top
    1058:	000b8000 	.word	0x000b8000
	blo     copy_data
#endif

	@ Clear the .bss section (zero init).
	mov     r2, #0
	ldr     r3, =__bss_start__
    105c:	000b0000 	.word	0x000b0000
	ldr     r4, =__bss_end__
    1060:	000b0000 	.word	0x000b0000

00001064 <blinki_main>:
 *  - all mmio7functions will be stored in IFLASH Section
 * if everything went correct MMIO6 and MMIO7 will blink
 */

void blinki_main(void *pvBootBlock __attribute__((unused)), unsigned long ulBootSource)
{
    1064:	b530      	push	{r4, r5, lr}
  MMIO6_BLINKI_HANDLE_T tMmio6Handle;
  MMIO7_BLINKI_HANDLE_T tMmio7Handle;

  /* initialize the systemtime */
  systime_init();
    1066:	4b0b      	ldr	r3, [pc, #44]	; (1094 <blinki_main+0x30>)
    1068:	4d0b      	ldr	r5, [pc, #44]	; (1098 <blinki_main+0x34>)
    106a:	4c0c      	ldr	r4, [pc, #48]	; (109c <blinki_main+0x38>)
 *  - all mmio7functions will be stored in IFLASH Section
 * if everything went correct MMIO6 and MMIO7 will blink
 */

void blinki_main(void *pvBootBlock __attribute__((unused)), unsigned long ulBootSource)
{
    106c:	b089      	sub	sp, #36	; 0x24
  MMIO6_BLINKI_HANDLE_T tMmio6Handle;
  MMIO7_BLINKI_HANDLE_T tMmio7Handle;

  /* initialize the systemtime */
  systime_init();
    106e:	4798      	blx	r3

  /* Switch all LEDs off. */
  mmio6_setLED(LED_OFF);
    1070:	2000      	movs	r0, #0
    1072:	4b0b      	ldr	r3, [pc, #44]	; (10a0 <blinki_main+0x3c>)
    1074:	4798      	blx	r3
  mmio7_setLED(LED_OFF);
    1076:	2000      	movs	r0, #0
    1078:	4b0a      	ldr	r3, [pc, #40]	; (10a4 <blinki_main+0x40>)
    107a:	4798      	blx	r3

  /* initialize all LED Handle's
   * MMIO6 and MMIO7 Handle's are just Counter to toggle the LED's
   */
  mmio6_init(&tMmio6Handle);
    107c:	4668      	mov	r0, sp
    107e:	4b0a      	ldr	r3, [pc, #40]	; (10a8 <blinki_main+0x44>)
    1080:	4798      	blx	r3
  mmio7_init(&tMmio7Handle);
    1082:	a804      	add	r0, sp, #16
    1084:	4b09      	ldr	r3, [pc, #36]	; (10ac <blinki_main+0x48>)
    1086:	4798      	blx	r3
  /*
   * Blinki routine
   */
  while(1)
  {
    mmio6_blinki(&tMmio6Handle);
    1088:	4668      	mov	r0, sp
    108a:	47a8      	blx	r5
    mmio7_blinki(&tMmio7Handle);
    108c:	a804      	add	r0, sp, #16
    108e:	47a0      	blx	r4
  };
    1090:	e7fa      	b.n	1088 <blinki_main+0x24>
    1092:	bf00      	nop
    1094:	000011a1 	.word	0x000011a1
    1098:	000010d9 	.word	0x000010d9
    109c:	00001151 	.word	0x00001151
    10a0:	000010b1 	.word	0x000010b1
    10a4:	00001129 	.word	0x00001129
    10a8:	000010c5 	.word	0x000010c5
    10ac:	0000113d 	.word	0x0000113d

000010b0 <mmio6_setLED>:


	ulValue = 0;

	/* set uValue in case LED should turned on. */
	switch(tState)
    10b0:	2801      	cmp	r0, #1
	case LED_ON:
		ulValue |= HOSTMSK(mmio6_cfg_pio_oe) | HOSTMSK(mmio6_cfg_pio_out);
		break;
	}

	ptMmioCtrlArea->aulMmio_cfg[6] = ulValue;
    10b2:	4b03      	ldr	r3, [pc, #12]	; (10c0 <mmio6_setLED+0x10>)
{
	HOSTDEF(ptMmioCtrlArea);
	unsigned long ulValue;


	ulValue = 0;
    10b4:	bf0c      	ite	eq
    10b6:	f44f 3240 	moveq.w	r2, #196608	; 0x30000
    10ba:	2200      	movne	r2, #0
	case LED_ON:
		ulValue |= HOSTMSK(mmio6_cfg_pio_oe) | HOSTMSK(mmio6_cfg_pio_out);
		break;
	}

	ptMmioCtrlArea->aulMmio_cfg[6] = ulValue;
    10bc:	619a      	str	r2, [r3, #24]
    10be:	4770      	bx	lr
    10c0:	ff401300 	.word	0xff401300

000010c4 <mmio6_init>:
	LED_ON			/* 1: on  */
};


void mmio6_init(MMIO6_BLINKI_HANDLE_T *ptHandle)
{
    10c4:	b510      	push	{r4, lr}
	ptHandle->uiCnt = 0;
    10c6:	2300      	movs	r3, #0
    10c8:	6043      	str	r3, [r0, #4]
	ptHandle->ulTimer = systime_get_ms();
    10ca:	4b02      	ldr	r3, [pc, #8]	; (10d4 <mmio6_init+0x10>)
	LED_ON			/* 1: on  */
};


void mmio6_init(MMIO6_BLINKI_HANDLE_T *ptHandle)
{
    10cc:	4604      	mov	r4, r0
	ptHandle->uiCnt = 0;
	ptHandle->ulTimer = systime_get_ms();
    10ce:	4798      	blx	r3
    10d0:	6020      	str	r0, [r4, #0]
    10d2:	bd10      	pop	{r4, pc}
    10d4:	000011b9 	.word	0x000011b9

000010d8 <mmio6_blinki>:
}


void mmio6_blinki(MMIO6_BLINKI_HANDLE_T *ptHandle)
{
    10d8:	b538      	push	{r3, r4, r5, lr}
	unsigned int uiCnt;
  int iResult;

  /* wait for 500ms */
	iResult = systime_elapsed(ptHandle->ulTimer, 500U);
    10da:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
	ptHandle->ulTimer = systime_get_ms();
}


void mmio6_blinki(MMIO6_BLINKI_HANDLE_T *ptHandle)
{
    10de:	4604      	mov	r4, r0
	unsigned int uiCnt;
  int iResult;

  /* wait for 500ms */
	iResult = systime_elapsed(ptHandle->ulTimer, 500U);
    10e0:	4d0d      	ldr	r5, [pc, #52]	; (1118 <mmio6_blinki+0x40>)
    10e2:	6800      	ldr	r0, [r0, #0]
    10e4:	47a8      	blx	r5
  while(iResult == 0){
    10e6:	b928      	cbnz	r0, 10f4 <mmio6_blinki+0x1c>
    iResult = systime_elapsed(ptHandle->ulTimer, 500U);
    10e8:	6820      	ldr	r0, [r4, #0]
    10ea:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
    10ee:	47a8      	blx	r5
	unsigned int uiCnt;
  int iResult;

  /* wait for 500ms */
	iResult = systime_elapsed(ptHandle->ulTimer, 500U);
  while(iResult == 0){
    10f0:	2800      	cmp	r0, #0
    10f2:	d0f9      	beq.n	10e8 <mmio6_blinki+0x10>
    iResult = systime_elapsed(ptHandle->ulTimer, 500U);
  };

  /* get the Counter */
	uiCnt = ptHandle->uiCnt;
    10f4:	6865      	ldr	r5, [r4, #4]

	/* get new systime */
	ptHandle->ulTimer = systime_get_ms();
    10f6:	4b09      	ldr	r3, [pc, #36]	; (111c <mmio6_blinki+0x44>)
    10f8:	4798      	blx	r3

	/* Show the LED state. */
	mmio6_setLED(atLEDState[uiCnt%2]);
    10fa:	4a09      	ldr	r2, [pc, #36]	; (1120 <mmio6_blinki+0x48>)

  /* get the Counter */
	uiCnt = ptHandle->uiCnt;

	/* get new systime */
	ptHandle->ulTimer = systime_get_ms();
    10fc:	6020      	str	r0, [r4, #0]

	/* Show the LED state. */
	mmio6_setLED(atLEDState[uiCnt%2]);
    10fe:	f005 0301 	and.w	r3, r5, #1

	/* Increment Counter and save in Handle */
	uiCnt++;
    1102:	3501      	adds	r5, #1


	ulValue = 0;

	/* set uValue in case LED should turned on. */
	switch(tState)
    1104:	5cd3      	ldrb	r3, [r2, r3]
{
	HOSTDEF(ptMmioCtrlArea);
	unsigned long ulValue;


	ulValue = 0;
    1106:	2b01      	cmp	r3, #1
	case LED_ON:
		ulValue |= HOSTMSK(mmio6_cfg_pio_oe) | HOSTMSK(mmio6_cfg_pio_out);
		break;
	}

	ptMmioCtrlArea->aulMmio_cfg[6] = ulValue;
    1108:	4b06      	ldr	r3, [pc, #24]	; (1124 <mmio6_blinki+0x4c>)
{
	HOSTDEF(ptMmioCtrlArea);
	unsigned long ulValue;


	ulValue = 0;
    110a:	bf0c      	ite	eq
    110c:	f44f 3240 	moveq.w	r2, #196608	; 0x30000
    1110:	2200      	movne	r2, #0
	case LED_ON:
		ulValue |= HOSTMSK(mmio6_cfg_pio_oe) | HOSTMSK(mmio6_cfg_pio_out);
		break;
	}

	ptMmioCtrlArea->aulMmio_cfg[6] = ulValue;
    1112:	619a      	str	r2, [r3, #24]
	mmio6_setLED(atLEDState[uiCnt%2]);

	/* Increment Counter and save in Handle */
	uiCnt++;

	ptHandle->uiCnt = uiCnt;
    1114:	6065      	str	r5, [r4, #4]
    1116:	bd38      	pop	{r3, r4, r5, pc}
    1118:	000011c5 	.word	0x000011c5
    111c:	000011b9 	.word	0x000011b9
    1120:	00001214 	.word	0x00001214
    1124:	ff401300 	.word	0xff401300

00001128 <mmio7_setLED>:


	ulValue = 0;

	/* set uValue in case LED should turned on. */
	switch(tState)
    1128:	2801      	cmp	r0, #1
	case LED_ON:
		ulValue |= HOSTMSK(mmio7_cfg_pio_oe) | HOSTMSK(mmio7_cfg_pio_out);
		break;
	}

	ptMmioCtrlArea->aulMmio_cfg[7] = ulValue;
    112a:	4b03      	ldr	r3, [pc, #12]	; (1138 <mmio7_setLED+0x10>)
{
	HOSTDEF(ptMmioCtrlArea);
	unsigned long ulValue;


	ulValue = 0;
    112c:	bf0c      	ite	eq
    112e:	f44f 3240 	moveq.w	r2, #196608	; 0x30000
    1132:	2200      	movne	r2, #0
	case LED_ON:
		ulValue |= HOSTMSK(mmio7_cfg_pio_oe) | HOSTMSK(mmio7_cfg_pio_out);
		break;
	}

	ptMmioCtrlArea->aulMmio_cfg[7] = ulValue;
    1134:	61da      	str	r2, [r3, #28]
    1136:	4770      	bx	lr
    1138:	ff401300 	.word	0xff401300

0000113c <mmio7_init>:
	LED_ON			/* 1: on  */
};


void mmio7_init(MMIO7_BLINKI_HANDLE_T *ptHandle)
{
    113c:	b510      	push	{r4, lr}
	ptHandle->uiCnt = 0;
    113e:	2300      	movs	r3, #0
    1140:	6043      	str	r3, [r0, #4]
	ptHandle->ulTimer = systime_get_ms();
    1142:	4b02      	ldr	r3, [pc, #8]	; (114c <mmio7_init+0x10>)
	LED_ON			/* 1: on  */
};


void mmio7_init(MMIO7_BLINKI_HANDLE_T *ptHandle)
{
    1144:	4604      	mov	r4, r0
	ptHandle->uiCnt = 0;
	ptHandle->ulTimer = systime_get_ms();
    1146:	4798      	blx	r3
    1148:	6020      	str	r0, [r4, #0]
    114a:	bd10      	pop	{r4, pc}
    114c:	000011b9 	.word	0x000011b9

00001150 <mmio7_blinki>:
}


void mmio7_blinki(MMIO7_BLINKI_HANDLE_T *ptHandle)
{
    1150:	b538      	push	{r3, r4, r5, lr}
	unsigned int uiCnt;
	int iResult;

	/* wait for 500ms */
  iResult = systime_elapsed(ptHandle->ulTimer, 500U);
    1152:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
	ptHandle->ulTimer = systime_get_ms();
}


void mmio7_blinki(MMIO7_BLINKI_HANDLE_T *ptHandle)
{
    1156:	4604      	mov	r4, r0
	unsigned int uiCnt;
	int iResult;

	/* wait for 500ms */
  iResult = systime_elapsed(ptHandle->ulTimer, 500U);
    1158:	4d0d      	ldr	r5, [pc, #52]	; (1190 <mmio7_blinki+0x40>)
    115a:	6800      	ldr	r0, [r0, #0]
    115c:	47a8      	blx	r5
  while(iResult == 0){
    115e:	b928      	cbnz	r0, 116c <mmio7_blinki+0x1c>
    iResult = systime_elapsed(ptHandle->ulTimer, 500U);
    1160:	6820      	ldr	r0, [r4, #0]
    1162:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
    1166:	47a8      	blx	r5
	unsigned int uiCnt;
	int iResult;

	/* wait for 500ms */
  iResult = systime_elapsed(ptHandle->ulTimer, 500U);
  while(iResult == 0){
    1168:	2800      	cmp	r0, #0
    116a:	d0f9      	beq.n	1160 <mmio7_blinki+0x10>
    iResult = systime_elapsed(ptHandle->ulTimer, 500U);
  };

  /* get the Counter */
	uiCnt = ptHandle->uiCnt;
    116c:	6865      	ldr	r5, [r4, #4]

	/* get new systime */
	ptHandle->ulTimer = systime_get_ms();
    116e:	4b09      	ldr	r3, [pc, #36]	; (1194 <mmio7_blinki+0x44>)
    1170:	4798      	blx	r3

	/* Show the LED state. */
	mmio7_setLED(atLEDState[uiCnt%2]);
    1172:	4a09      	ldr	r2, [pc, #36]	; (1198 <mmio7_blinki+0x48>)

  /* get the Counter */
	uiCnt = ptHandle->uiCnt;

	/* get new systime */
	ptHandle->ulTimer = systime_get_ms();
    1174:	6020      	str	r0, [r4, #0]

	/* Show the LED state. */
	mmio7_setLED(atLEDState[uiCnt%2]);
    1176:	f005 0301 	and.w	r3, r5, #1

	/* Increment Counter and save in Handle */
	uiCnt++;
    117a:	3501      	adds	r5, #1


	ulValue = 0;

	/* set uValue in case LED should turned on. */
	switch(tState)
    117c:	5cd3      	ldrb	r3, [r2, r3]
{
	HOSTDEF(ptMmioCtrlArea);
	unsigned long ulValue;


	ulValue = 0;
    117e:	2b01      	cmp	r3, #1
	case LED_ON:
		ulValue |= HOSTMSK(mmio7_cfg_pio_oe) | HOSTMSK(mmio7_cfg_pio_out);
		break;
	}

	ptMmioCtrlArea->aulMmio_cfg[7] = ulValue;
    1180:	4b06      	ldr	r3, [pc, #24]	; (119c <mmio7_blinki+0x4c>)
{
	HOSTDEF(ptMmioCtrlArea);
	unsigned long ulValue;


	ulValue = 0;
    1182:	bf0c      	ite	eq
    1184:	f44f 3240 	moveq.w	r2, #196608	; 0x30000
    1188:	2200      	movne	r2, #0
	case LED_ON:
		ulValue |= HOSTMSK(mmio7_cfg_pio_oe) | HOSTMSK(mmio7_cfg_pio_out);
		break;
	}

	ptMmioCtrlArea->aulMmio_cfg[7] = ulValue;
    118a:	61da      	str	r2, [r3, #28]
	mmio7_setLED(atLEDState[uiCnt%2]);

	/* Increment Counter and save in Handle */
	uiCnt++;

	ptHandle->uiCnt = uiCnt;
    118c:	6065      	str	r5, [r4, #4]
    118e:	bd38      	pop	{r3, r4, r5, pc}
    1190:	000011c5 	.word	0x000011c5
    1194:	000011b9 	.word	0x000011b9
    1198:	00001218 	.word	0x00001218
    119c:	ff401300 	.word	0xff401300

000011a0 <systime_init>:
	ptSystimeUcComArea->ulSystime_count_value = 10U<<28U;
#elif ASIC_TYP==ASIC_TYP_NETX90_MPW_APP || ASIC_TYP==ASIC_TYP_NETX90_APP
	HOSTDEF(ptSystimeAppArea);

	/* Set the systime border to 1ms. */
	ptSystimeAppArea->ulSystime_border = (DEV_FREQUENCY/100U)-1U;
    11a0:	4b03      	ldr	r3, [pc, #12]	; (11b0 <systime_init+0x10>)
    11a2:	4a04      	ldr	r2, [pc, #16]	; (11b4 <systime_init+0x14>)
    11a4:	609a      	str	r2, [r3, #8]
	ptSystimeAppArea->ulSystime_count_value = 10U<<28U;
    11a6:	f04f 4220 	mov.w	r2, #2684354560	; 0xa0000000
    11aa:	60da      	str	r2, [r3, #12]
    11ac:	4770      	bx	lr
    11ae:	bf00      	nop
    11b0:	ff8016c0 	.word	0xff8016c0
    11b4:	000f423f 	.word	0x000f423f

000011b8 <systime_get_ms>:

	return ptSystimeUcComArea->ulSystime_s;
#elif ASIC_TYP==ASIC_TYP_NETX90_MPW_APP || ASIC_TYP==ASIC_TYP_NETX90_APP
	HOSTDEF(ptSystimeAppArea);

	return ptSystimeAppArea->ulSystime_s;
    11b8:	4b01      	ldr	r3, [pc, #4]	; (11c0 <systime_get_ms+0x8>)
    11ba:	6818      	ldr	r0, [r3, #0]
	HOSTDEF(ptSystimeArea)


	return ptSystimeArea->ulSystime_s;
#endif
}
    11bc:	4770      	bx	lr
    11be:	bf00      	nop
    11c0:	ff8016c0 	.word	0xff8016c0

000011c4 <systime_elapsed>:

	unsigned long ulDiff;


	/* get the time difference */
	ulDiff = ptSystimeAppArea->ulSystime_s - ulStart;
    11c4:	4b03      	ldr	r3, [pc, #12]	; (11d4 <systime_elapsed+0x10>)
    11c6:	681b      	ldr	r3, [r3, #0]
    11c8:	1a18      	subs	r0, r3, r0
	/* get the time difference */
	ulDiff = ptSystimeArea->ulSystime_s - ulStart;

	return (ulDiff>=ulDuration);
#endif
}
    11ca:	4288      	cmp	r0, r1
    11cc:	bf34      	ite	cc
    11ce:	2000      	movcc	r0, #0
    11d0:	2001      	movcs	r0, #1
    11d2:	4770      	bx	lr
    11d4:	ff8016c0 	.word	0xff8016c0

000011d8 <systime_delay_ms>:

	return ptSystimeUcComArea->ulSystime_s;
#elif ASIC_TYP==ASIC_TYP_NETX90_MPW_APP || ASIC_TYP==ASIC_TYP_NETX90_APP
	HOSTDEF(ptSystimeAppArea);

	return ptSystimeAppArea->ulSystime_s;
    11d8:	4a03      	ldr	r2, [pc, #12]	; (11e8 <systime_delay_ms+0x10>)
    11da:	6811      	ldr	r1, [r2, #0]

	unsigned long ulDiff;


	/* get the time difference */
	ulDiff = ptSystimeAppArea->ulSystime_s - ulStart;
    11dc:	6813      	ldr	r3, [r2, #0]
    11de:	1a5b      	subs	r3, r3, r1

	ulStart = systime_get_ms();
	do
	{
		iElapsed = systime_elapsed(ulStart, ulDuration);
	} while( iElapsed==0 );
    11e0:	4298      	cmp	r0, r3
    11e2:	d8fb      	bhi.n	11dc <systime_delay_ms+0x4>
}
    11e4:	4770      	bx	lr
    11e6:	bf00      	nop
    11e8:	ff8016c0 	.word	0xff8016c0

000011ec <systime_handle_start_ms>:

	return ptSystimeUcComArea->ulSystime_s;
#elif ASIC_TYP==ASIC_TYP_NETX90_MPW_APP || ASIC_TYP==ASIC_TYP_NETX90_APP
	HOSTDEF(ptSystimeAppArea);

	return ptSystimeAppArea->ulSystime_s;
    11ec:	4b02      	ldr	r3, [pc, #8]	; (11f8 <systime_handle_start_ms+0xc>)
    11ee:	681b      	ldr	r3, [r3, #0]



void systime_handle_start_ms(TIMER_HANDLE_T *ptHandle, unsigned long ulDuration)
{
	ptHandle->ulStart = systime_get_ms();
    11f0:	6003      	str	r3, [r0, #0]
	ptHandle->ulDuration = ulDuration;
    11f2:	6041      	str	r1, [r0, #4]
    11f4:	4770      	bx	lr
    11f6:	bf00      	nop
    11f8:	ff8016c0 	.word	0xff8016c0

000011fc <systime_handle_is_elapsed>:

	unsigned long ulDiff;


	/* get the time difference */
	ulDiff = ptSystimeAppArea->ulSystime_s - ulStart;
    11fc:	4b04      	ldr	r3, [pc, #16]	; (1210 <systime_handle_is_elapsed+0x14>)
    11fe:	6802      	ldr	r2, [r0, #0]
    1200:	681b      	ldr	r3, [r3, #0]

	return (ulDiff>=ulDuration);
    1202:	6840      	ldr	r0, [r0, #4]

	unsigned long ulDiff;


	/* get the time difference */
	ulDiff = ptSystimeAppArea->ulSystime_s - ulStart;
    1204:	1a9b      	subs	r3, r3, r2


int systime_handle_is_elapsed(TIMER_HANDLE_T *ptHandle)
{
	return systime_elapsed(ptHandle->ulStart, ptHandle->ulDuration);
}
    1206:	4298      	cmp	r0, r3
    1208:	bf8c      	ite	hi
    120a:	2000      	movhi	r0, #0
    120c:	2001      	movls	r0, #1
    120e:	4770      	bx	lr
    1210:	ff8016c0 	.word	0xff8016c0

00001214 <atLEDState>:
    1214:	00000100                                ....

00001218 <atLEDState>:
    1218:	00000100                                ....
